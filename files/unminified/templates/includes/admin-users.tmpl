{{ define "title" }}User Management{{ end }}

{{ define "scripts" }}
<script type="module">
    import * as API from {{  "/static/js/api.js" }}
    import * as Util from {{  "/static/js/util.js" }}

    document.addEventListener('alpine:init', () => {
        Alpine.data('users', () => ({
            users: {{ users . }},
            username: {{ username . }},
            showModal: false,
            modalText: "",

            get sortedUsers() {
                return this.users.sort(Util.Compare.Users)
            },

            async refreshUsers() {
                await API.Admin.Users()
                    .then(data => { console.log("data", data); this.users = data.users })
                    .catch((e) => {
                        console.error(e)
                        this.modalText = 'FAILED TO REFRESH USERS'
                        this.showModal = true
                    })
            },

            async deleteUser(uid) {
                await API.Admin.DeleteUser(uid)
                    .then(() => {
                        this.modalText = 'SUCCESS'
                        this.refreshUsers()
                    })
                    .catch(() => {
                        this.modalText = 'FAILED'
                    })

                this.showModal = true
            },
        }))
    })
</script>
{{ end }}

{{ define "content" }}
<div x-data="users">
    <h2>Users</h2>
    <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; row-gap: 0.8em; column-gap: 4px;">
        <!-- Table Headings -->
        <b><span style="grid-column: 1; grid-row: 0">User</span></b>
        <b><span style="grid-column: 2; grid-row: 0">Admin</span></b>
        <b><span style="grid-column: 3; grid-row: 0">Actions</span></b>
        <!-- Username -->
        <template x-for="(user, index) in sortedUsers">
            <span x-text="user.name" :style="`grid-column: 1; grid-row: ${index + 2}`"></span>
        </template>
        <!-- Is Admin -->
        <template x-for="(user, index) in sortedUsers">
            <template x-if="user.type === 'admin'">
                <span :style="`grid-column: 2; grid-row: ${index + 2}`">True</span>
            </template>
        </template>
        <template x-for="(user, index) in sortedUsers">
            <template x-if="user.type === 'standard'">
                <span :style="`grid-column: 2; grid-row: ${index + 2}`">False</span>
            </template>
        </template>
        <!-- Actions -->
        <template x-for="(user, index) in sortedUsers">
            <template x-if="1 === 1">
                <span :style="`grid-column: 3; grid-row: ${index + 2}`">
                    <a :href="`/admin/users/edit?uid=${user.uid}`">EDIT</a>
                    <template x-if="user.name !== username">
                        <a href="javascript:void(0)" @click="deleteUser(user.uid)">DELETE</a>
                    </template>
                </span>
            </template>
        </template>
    </div>
    <a class="no-bottom" href="/admin/users/create"><button class="form-button">New User</button></a>
    <!-- Modal -->
    <div x-cloak>
        <div  x-show="showModal" class="modal">
            <div @click.away="showModal = false" x-show="showModal" x-transition class="modal__content">
                <span class="modal__close-button" @click="showModal = false">&times;</span>
                <h3 x-text="modalText"></h3>
            </div>
        </div>
    </div>
</div>
{{ end }}