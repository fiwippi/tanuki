{{ define "title" }}Home{{ end }}

{{ define "scripts" }}
<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('specficTag', () => ({
            tag: "",
            search: "",
            images: [],
            entries: {{ seriesWithTag . }},

            get filteredEntries() {
                return this.entries.filter(
                    i => i.title.toLowerCase().startsWith(this.search.toLowerCase())
                )
            },

            async init() {
                let prefix = "/tags/"
                this.tag = window.location.pathname.slice(prefix.length)

                this.images = []
                let promises = []
                this.entries.sort(entryCompare)

                for (let i = 0; i < this.entries.length; i++) {
                    let img = new Image()
                    promises.push(waitUntilLoad(img))
                    img.src = '/api/series/{0}/cover?thumbnail=true'.format(this.entries[i].hash)
                    this.images.push(img)
                }

                await Promise.all(promises)
            },
        }))
    })
</script>
{{ end }}

{{ define "content" }}
<div x-data="specficTag">
    <template x-if="entries.length > 0">
        <h2 x-text="'Tag: ' + tag"></h2>
    </template>
    <template x-if="entries.length === 0">
        <h3>Empty!</h3>
    </template>

    <template x-if="entries.length > 0">
        <div class="searchWrapper">
            <input x-model="search" class="searchbar" placeholder="Search..." type="text">
        </div>
    </template>

    <div class="entriesDiv">
        <template x-for="(e, index) in filteredEntries">
            <a style="border-bottom: none;" :href="'/entries/{0}'.format(e.hash)">
                <div class="entry" :style="`flex: 0 1 ${images[index].naturalWidth}px`">
                    <img :src="images[index].src" style="width: 100%">
                    <div style="padding: 9px 16px;" >
                        <h4 style="margin-block: 0.2em" x-text="e.title"></h4>
                        <span x-text="'Entries: {0}'.format(e.entries)"></span><br>
                    </div>
                </div>
            </a>
        </template>
    </div>
</div>
{{ end }}