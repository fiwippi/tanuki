{{ define "title" }}Tag{{ end }}

{{ define "scripts" }}
<script type="module">
    import * as Util from {{ versioning "/static/js/util.js" }}

    document.addEventListener('alpine:init', () => {
        Alpine.data('specficTag', () => ({
            tag: "",
            search: "",
            images: [],
            entries: {{ seriesWithTag . }},

            get filteredEntries() {
                return this.entries.filter(
                    i => i.title.toLowerCase().startsWith(this.search.toLowerCase())
                )
            },

            async init() {
                let prefix = "/tags/"
                this.tag = window.location.pathname.slice(prefix.length)

                this.entries.sort(Util.Compare.EntryOrder)
                let images = []
                await Util.Images.LoadImages(images, this.entries.length, (i) => {
                    return `/api/series/${this.entries[i].hash}/cover?thumbnail=true`
                })
                this.images = images
            },
        }))
    })
</script>
{{ end }}

{{ define "content" }}
<div x-data="specficTag">
    <template x-if="entries.length > 0">
        <h2 x-text="`Tag: ${tag}`"></h2>
    </template>
    <template x-if="entries.length === 0">
        <h3>Empty!</h3>
    </template>

    <template x-if="entries.length > 0">
        <div class="search">
            <input x-model="search" class="search__bar" placeholder="Search..." type="text">
        </div>
    </template>

    <div class="entries">
        <template x-for="(e, index) in filteredEntries">
            <a class="no-bottom" :href="`/entries/${e.hash}`">
                <div class="entry" style="flex: 0 1 auto; max-width: 200px">
                    <img :src="images[index].src" style="width: 100%">
                    <div class="entry__info" >
                        <h4 class="entry__title" x-text="e.title"></h4>
                        <span x-text="`Entries: ${e.entries}`"></span><br>
                    </div>
                </div>
            </a>
        </template>
    </div>
</div>
{{ end }}