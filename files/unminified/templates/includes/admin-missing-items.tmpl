{{ define "title" }}Missing Items{{ end }}

{{ define "scripts" }}
<script type="module">
    import * as API from {{ versioning "/static/js/api.js" }}
    import * as Util from {{ versioning "/static/js/util.js" }}

    document.addEventListener('alpine:init', () => {
        Alpine.data('missing_items', () => ({
            items: [],
            showModal: false,
            modalText: "",
            loaded: false,
            response: "Loading",

            async init() {
                let cancel = Util.Animate.DotDotDot("Loading", (str) => this.response = str)
                await this.refreshItems()
                cancel()
            },

            async refreshItems() {
                await API.Admin.GetMissingItems()
                    .then(resp => {
                        if (resp.items == null) {
                            this.items = []
                        } else {
                            this.items = resp.items
                        }
                    })
                    .catch(() => {
                        this.modalText = 'FAILED TO GET ITEMS'
                        this.showModal = true
                    })
                this.loaded = true
            },

            async deleteItems() {
                await API.Admin.DeleteMissingItems()
                    .then(() => {
                        this.modalText = 'DELETED ITEMS'
                    })
                    .catch(() => {
                        this.modalText = 'FAILED TO DELETE ITEMS'
                    })
                this.showModal = true

                await this.refreshItems()
            },
        }))
    })
</script>
{{ end }}

{{ define "content" }}
<div x-data="missing_items">
    <h2>Missing Items</h2>
    <p x-text="response" style="font-weight: bold" x-show="!loaded"></p>
    <h3 x-show="loaded && items.length === 0">No Missing Items!</h3>

    <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; row-gap: 0.8em; column-gap: 4px;">
        <!-- Table Headings -->
        <template x-if="items.length > 0">
            <b><span style="grid-column: 1; grid-row: 0">Type</span></b>
        </template>
        <template x-if="items.length > 0">
            <b><span style="grid-column: 1; grid-row: 0">Title</span></b>
        </template>
        <template x-if="items.length > 0">
            <b><span style="grid-column: 2; grid-row: 0">Path</span></b>
        </template>

        <!-- Type -->
        <template x-for="(item, index) in items" :key="index">
            <span x-text="item.type" :style="`grid-column: 1; grid-row: ${index + 2}`"></span>
        </template>

        <!-- Title -->
        <template x-for="(item, index) in items" :key="index">
            <span x-text="item.title" :style="`grid-column: 2; grid-row: ${index + 2}`"></span>
        </template>

        <!-- Path -->
        <template x-for="(item, index) in items" :key="index">
            <span x-text="item.path" :style="`grid-column: 3; grid-row: ${index + 2}`"></span>
        </template>
    </div>

    <!-- Delete Missing Items -->
    <template x-if="items.length > 0">
        <a class="no-bottom" href="javascript:void(0)"><button class="form-button" @click="await deleteItems()">Delete Missing Items</button></a>
    </template>

    <!-- Modal -->
    <div x-cloak>
        <div  x-show="showModal" class="modal">
            <div @click.away="showModal = false" x-show="showModal" x-transition class="modal__content">
                <span class="modal__close-button" @click="showModal = false">&times;</span>
                <h3 x-text="modalText"></h3>
            </div>
        </div>
    </div>
</div>
{{ end }}